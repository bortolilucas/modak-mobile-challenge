// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProductList view should match CategoriesLoading snapshot 1`] = `
<RCTScrollView
  ListEmptyComponent={
    <View
      style={
        {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <Text
        color="#006a61"
        size="H3"
      >
        No products found
      </Text>
    </View>
  }
  ListFooterComponent={
    <ForwardRef
      edges={
        {
          "bottom": "maximum",
        }
      }
      style={
        {
          "paddingVertical": 20.84375,
        }
      }
    />
  }
  ListHeaderComponent={
    <View
      style={
        {
          "gap": 12.506250000000001,
        }
      }
    >
      <Select
        isLoading={true}
        onChange={[Function]}
        options={[]}
        title="Filter by category"
        value=""
      />
      <Select
        onChange={[Function]}
        options={
          [
            {
              "label": "Sort by",
              "value": "",
            },
            {
              "label": "Price: Low to High",
              "value": "price_asc",
            },
            {
              "label": "Price: High to Low",
              "value": "price_desc",
            },
            {
              "label": "Lowest Rating",
              "value": "rating_asc",
            },
            {
              "label": "Highest Rating",
              "value": "rating_desc",
            },
          ]
        }
        title="Sort options"
        value=""
      />
    </View>
  }
  contentContainerStyle={
    {
      "flexGrow": 1,
      "gap": 29.181250000000002,
      "paddingHorizontal": 41.66666666666667,
      "paddingTop": 4.16875,
    }
  }
  data={
    [
      Product {
        "brand": "",
        "category": "category-1",
        "description": "",
        "dimensions": {
          "depth": 0,
          "height": 0,
          "width": 0,
        },
        "id": 1,
        "price": 1,
        "rating": 1,
        "stock": 1,
        "thumbnail": "",
        "title": "Mock product",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={6}
  keyExtractor={[Function]}
  onContentSizeChange={[Function]}
  onEndReached={[MockFunction]}
  onEndReachedThreshold={0.5}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onRefresh={[MockFunction]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  refreshControl={
    <RefreshControlMock
      onRefresh={[MockFunction]}
      refreshing={false}
    />
  }
  refreshing={false}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={0.0001}
  stickyHeaderIndices={[]}
  viewabilityConfigCallbackPairs={[]}
>
  <RCTRefreshControl />
  <View>
    <View
      collapsable={false}
      onLayout={[Function]}
    >
      <View
        style={
          {
            "gap": 12.506250000000001,
          }
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": true,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "alignItems": "center",
              "borderColor": "#bec9c6",
              "borderRadius": 20.833333333333336,
              "borderWidth": 2.0833333333333335,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "padding": 20.833333333333336,
            }
          }
        >
          <Text
            style={
              [
                {
                  "fontSize": 29.166666666666668,
                  "fontWeight": "500",
                  "lineHeight": 41.66666666666667,
                },
                {
                  "color": "#191c1b",
                },
                undefined,
              ]
            }
          >
            Loading...
          </Text>
          <ActivityIndicator
            color="#3f4947"
            size="small"
          />
        </View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "alignItems": "center",
              "borderColor": "#bec9c6",
              "borderRadius": 20.833333333333336,
              "borderWidth": 2.0833333333333335,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "padding": 20.833333333333336,
            }
          }
        >
          <Text
            style={
              [
                {
                  "fontSize": 29.166666666666668,
                  "fontWeight": "500",
                  "lineHeight": 41.66666666666667,
                },
                {
                  "color": "#191c1b",
                },
                undefined,
              ]
            }
          >
            Sort by
          </Text>
          <RNSVGSvgView
            align="xMidYMid"
            bbHeight={25}
            bbWidth={25}
            focusable={false}
            height={25}
            meetOrSlice={0}
            minX={0}
            minY={0}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                {
                  "flex": 0,
                  "height": 25,
                  "width": 25,
                },
              ]
            }
            vbHeight={10}
            vbWidth={14}
            width={25}
          >
            <RNSVGGroup
              fill={
                {
                  "payload": 4278190080,
                  "type": 0,
                }
              }
            >
              <RNSVGPath
                clipRule={0}
                d="M2.00016 0.833496L7.00016 5.8335L12.0002 0.833496L13.6668 2.50016L7.00016 9.16683L0.333496 2.50016L2.00016 0.833496Z"
                fill={
                  {
                    "payload": 4282337607,
                    "type": 0,
                  }
                }
                fillRule={0}
                propList={
                  [
                    "fill",
                    "fillRule",
                  ]
                }
              />
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
      </View>
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          [
            {
              "flexDirection": "row",
            },
            {
              "justifyContent": "space-between",
            },
          ]
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "backgroundColor": "#fff",
              "borderColor": "#bec9c6",
              "borderRadius": 20.833333333333336,
              "borderWidth": 2.0833333333333335,
              "elevation": 1,
              "opacity": 1,
              "shadowColor": "#000",
              "shadowOffset": {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 0.18,
              "shadowRadius": 1,
              "width": "48%",
            }
          }
        >
          <View
            style={
              {
                "borderTopLeftRadius": 20.833333333333336,
                "borderTopRightRadius": 20.833333333333336,
                "height": 260.546875,
                "overflow": "hidden",
                "width": "100%",
              }
            }
          >
            <Image
              source={
                {
                  "uri": "",
                }
              }
              style={
                {
                  "height": "100%",
                  "width": "100%",
                }
              }
            />
            <View
              style={
                [
                  {
                    "backgroundColor": "#006a61",
                    "borderTopLeftRadius": 12.5,
                    "justifyContent": "center",
                    "paddingHorizontal": 16.666666666666668,
                    "paddingVertical": 3.1265625000000004,
                  },
                  {
                    "bottom": 0,
                    "position": "absolute",
                    "right": 0,
                  },
                ]
              }
            >
              <Text
                style={
                  [
                    {
                      "fontSize": 25,
                      "fontWeight": "500",
                      "lineHeight": 33.333333333333336,
                    },
                    {
                      "color": "#fff",
                    },
                    {
                      "textTransform": "capitalize",
                    },
                  ]
                }
              >
                category-1
              </Text>
            </View>
          </View>
          <View
            style={
              {
                "gap": 16.675,
                "paddingHorizontal": 20.833333333333336,
                "paddingVertical": 20.84375,
              }
            }
          >
            <Text
              numberOfLines={2}
              style={
                [
                  {
                    "fontSize": 29.166666666666668,
                    "fontWeight": "500",
                    "lineHeight": 41.66666666666667,
                  },
                  {
                    "color": "#191c1b",
                  },
                  undefined,
                ]
              }
            >
              Mock product
            </Text>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 12.5,
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "gap": 4.166666666666667,
                  }
                }
              >
                <RNSVGSvgView
                  align="xMidYMid"
                  bbHeight={33.333333333333336}
                  bbWidth={33.333333333333336}
                  focusable={false}
                  height={33.333333333333336}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      {
                        "flex": 0,
                        "height": 33,
                        "width": 33,
                      },
                    ]
                  }
                  vbHeight={24}
                  vbWidth={24}
                  width={33.333333333333336}
                >
                  <RNSVGGroup
                    fill={
                      {
                        "payload": 4278190080,
                        "type": 0,
                      }
                    }
                  >
                    <RNSVGPath
                      d="M11.525 2.295a.53.53 0 0 1 .95 0l2.31 4.679a2.123 2.123 0 0 0 1.595 1.16l5.166.756a.53.53 0 0 1 .294.904l-3.736 3.638a2.123 2.123 0 0 0-.611 1.878l.882 5.14a.53.53 0 0 1-.771.56l-4.618-2.428a2.122 2.122 0 0 0-1.973 0L6.396 21.01a.53.53 0 0 1-.77-.56l.881-5.139a2.122 2.122 0 0 0-.611-1.879L2.16 9.795a.53.53 0 0 1 .294-.906l5.165-.755a2.122 2.122 0 0 0 1.597-1.16z"
                      fill={
                        {
                          "payload": 4282337607,
                          "type": 0,
                        }
                      }
                      propList={
                        [
                          "fill",
                          "strokeWidth",
                          "strokeLinecap",
                          "strokeLinejoin",
                        ]
                      }
                      strokeLinecap={1}
                      strokeLinejoin={1}
                      strokeWidth="2"
                    />
                  </RNSVGGroup>
                </RNSVGSvgView>
                <Text
                  style={
                    [
                      {
                        "fontSize": 29.166666666666668,
                        "fontWeight": "500",
                        "lineHeight": 41.66666666666667,
                      },
                      {
                        "color": "#3f4947",
                      },
                      undefined,
                    ]
                  }
                >
                  1
                </Text>
              </View>
              <Text
                style={
                  [
                    {
                      "fontSize": 29.166666666666668,
                      "fontWeight": "500",
                      "lineHeight": 41.66666666666667,
                    },
                    {
                      "color": "#006a61",
                    },
                    undefined,
                  ]
                }
              >
                $1.00
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
    >
      <RNCSafeAreaView
        edges={
          {
            "bottom": "maximum",
            "left": "off",
            "right": "off",
            "top": "off",
          }
        }
        style={
          {
            "paddingVertical": 20.84375,
          }
        }
      />
    </View>
  </View>
</RCTScrollView>
`;

exports[`ProductList view should match Default snapshot 1`] = `
<RCTScrollView
  ListEmptyComponent={
    <View
      style={
        {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <Text
        color="#006a61"
        size="H3"
      >
        No products found
      </Text>
    </View>
  }
  ListFooterComponent={
    <ForwardRef
      edges={
        {
          "bottom": "maximum",
        }
      }
      style={
        {
          "paddingVertical": 20.84375,
        }
      }
    />
  }
  ListHeaderComponent={
    <View
      style={
        {
          "gap": 12.506250000000001,
        }
      }
    >
      <Select
        isLoading={false}
        onChange={[Function]}
        options={
          [
            {
              "label": "All categories",
              "value": "",
            },
            {
              "label": "Category 0",
              "value": "category-0",
            },
            {
              "label": "Category 1",
              "value": "category-1",
            },
            {
              "label": "Category 2",
              "value": "category-2",
            },
            {
              "label": "Category 3",
              "value": "category-3",
            },
          ]
        }
        title="Filter by category"
        value=""
      />
      <Select
        onChange={[Function]}
        options={
          [
            {
              "label": "Sort by",
              "value": "",
            },
            {
              "label": "Price: Low to High",
              "value": "price_asc",
            },
            {
              "label": "Price: High to Low",
              "value": "price_desc",
            },
            {
              "label": "Lowest Rating",
              "value": "rating_asc",
            },
            {
              "label": "Highest Rating",
              "value": "rating_desc",
            },
          ]
        }
        title="Sort options"
        value=""
      />
    </View>
  }
  contentContainerStyle={
    {
      "flexGrow": 1,
      "gap": 29.181250000000002,
      "paddingHorizontal": 41.66666666666667,
      "paddingTop": 4.16875,
    }
  }
  data={
    [
      Product {
        "brand": "",
        "category": "category-1",
        "description": "",
        "dimensions": {
          "depth": 0,
          "height": 0,
          "width": 0,
        },
        "id": 1,
        "price": 1,
        "rating": 1,
        "stock": 1,
        "thumbnail": "",
        "title": "Mock product",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={6}
  keyExtractor={[Function]}
  onContentSizeChange={[Function]}
  onEndReached={[MockFunction]}
  onEndReachedThreshold={0.5}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onRefresh={[MockFunction]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  refreshControl={
    <RefreshControlMock
      onRefresh={[MockFunction]}
      refreshing={false}
    />
  }
  refreshing={false}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={0.0001}
  stickyHeaderIndices={[]}
  viewabilityConfigCallbackPairs={[]}
>
  <RCTRefreshControl />
  <View>
    <View
      collapsable={false}
      onLayout={[Function]}
    >
      <View
        style={
          {
            "gap": 12.506250000000001,
          }
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": false,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "alignItems": "center",
              "borderColor": "#bec9c6",
              "borderRadius": 20.833333333333336,
              "borderWidth": 2.0833333333333335,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "padding": 20.833333333333336,
            }
          }
        >
          <Text
            style={
              [
                {
                  "fontSize": 29.166666666666668,
                  "fontWeight": "500",
                  "lineHeight": 41.66666666666667,
                },
                {
                  "color": "#191c1b",
                },
                undefined,
              ]
            }
          >
            All categories
          </Text>
          <RNSVGSvgView
            align="xMidYMid"
            bbHeight={25}
            bbWidth={25}
            focusable={false}
            height={25}
            meetOrSlice={0}
            minX={0}
            minY={0}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                {
                  "flex": 0,
                  "height": 25,
                  "width": 25,
                },
              ]
            }
            vbHeight={10}
            vbWidth={14}
            width={25}
          >
            <RNSVGGroup
              fill={
                {
                  "payload": 4278190080,
                  "type": 0,
                }
              }
            >
              <RNSVGPath
                clipRule={0}
                d="M2.00016 0.833496L7.00016 5.8335L12.0002 0.833496L13.6668 2.50016L7.00016 9.16683L0.333496 2.50016L2.00016 0.833496Z"
                fill={
                  {
                    "payload": 4282337607,
                    "type": 0,
                  }
                }
                fillRule={0}
                propList={
                  [
                    "fill",
                    "fillRule",
                  ]
                }
              />
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "alignItems": "center",
              "borderColor": "#bec9c6",
              "borderRadius": 20.833333333333336,
              "borderWidth": 2.0833333333333335,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "padding": 20.833333333333336,
            }
          }
        >
          <Text
            style={
              [
                {
                  "fontSize": 29.166666666666668,
                  "fontWeight": "500",
                  "lineHeight": 41.66666666666667,
                },
                {
                  "color": "#191c1b",
                },
                undefined,
              ]
            }
          >
            Sort by
          </Text>
          <RNSVGSvgView
            align="xMidYMid"
            bbHeight={25}
            bbWidth={25}
            focusable={false}
            height={25}
            meetOrSlice={0}
            minX={0}
            minY={0}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                {
                  "flex": 0,
                  "height": 25,
                  "width": 25,
                },
              ]
            }
            vbHeight={10}
            vbWidth={14}
            width={25}
          >
            <RNSVGGroup
              fill={
                {
                  "payload": 4278190080,
                  "type": 0,
                }
              }
            >
              <RNSVGPath
                clipRule={0}
                d="M2.00016 0.833496L7.00016 5.8335L12.0002 0.833496L13.6668 2.50016L7.00016 9.16683L0.333496 2.50016L2.00016 0.833496Z"
                fill={
                  {
                    "payload": 4282337607,
                    "type": 0,
                  }
                }
                fillRule={0}
                propList={
                  [
                    "fill",
                    "fillRule",
                  ]
                }
              />
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
      </View>
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          [
            {
              "flexDirection": "row",
            },
            {
              "justifyContent": "space-between",
            },
          ]
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "backgroundColor": "#fff",
              "borderColor": "#bec9c6",
              "borderRadius": 20.833333333333336,
              "borderWidth": 2.0833333333333335,
              "elevation": 1,
              "opacity": 1,
              "shadowColor": "#000",
              "shadowOffset": {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 0.18,
              "shadowRadius": 1,
              "width": "48%",
            }
          }
        >
          <View
            style={
              {
                "borderTopLeftRadius": 20.833333333333336,
                "borderTopRightRadius": 20.833333333333336,
                "height": 260.546875,
                "overflow": "hidden",
                "width": "100%",
              }
            }
          >
            <Image
              source={
                {
                  "uri": "",
                }
              }
              style={
                {
                  "height": "100%",
                  "width": "100%",
                }
              }
            />
            <View
              style={
                [
                  {
                    "backgroundColor": "#006a61",
                    "borderTopLeftRadius": 12.5,
                    "justifyContent": "center",
                    "paddingHorizontal": 16.666666666666668,
                    "paddingVertical": 3.1265625000000004,
                  },
                  {
                    "bottom": 0,
                    "position": "absolute",
                    "right": 0,
                  },
                ]
              }
            >
              <Text
                style={
                  [
                    {
                      "fontSize": 25,
                      "fontWeight": "500",
                      "lineHeight": 33.333333333333336,
                    },
                    {
                      "color": "#fff",
                    },
                    {
                      "textTransform": "capitalize",
                    },
                  ]
                }
              >
                category-1
              </Text>
            </View>
          </View>
          <View
            style={
              {
                "gap": 16.675,
                "paddingHorizontal": 20.833333333333336,
                "paddingVertical": 20.84375,
              }
            }
          >
            <Text
              numberOfLines={2}
              style={
                [
                  {
                    "fontSize": 29.166666666666668,
                    "fontWeight": "500",
                    "lineHeight": 41.66666666666667,
                  },
                  {
                    "color": "#191c1b",
                  },
                  undefined,
                ]
              }
            >
              Mock product
            </Text>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 12.5,
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "gap": 4.166666666666667,
                  }
                }
              >
                <RNSVGSvgView
                  align="xMidYMid"
                  bbHeight={33.333333333333336}
                  bbWidth={33.333333333333336}
                  focusable={false}
                  height={33.333333333333336}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      {
                        "flex": 0,
                        "height": 33,
                        "width": 33,
                      },
                    ]
                  }
                  vbHeight={24}
                  vbWidth={24}
                  width={33.333333333333336}
                >
                  <RNSVGGroup
                    fill={
                      {
                        "payload": 4278190080,
                        "type": 0,
                      }
                    }
                  >
                    <RNSVGPath
                      d="M11.525 2.295a.53.53 0 0 1 .95 0l2.31 4.679a2.123 2.123 0 0 0 1.595 1.16l5.166.756a.53.53 0 0 1 .294.904l-3.736 3.638a2.123 2.123 0 0 0-.611 1.878l.882 5.14a.53.53 0 0 1-.771.56l-4.618-2.428a2.122 2.122 0 0 0-1.973 0L6.396 21.01a.53.53 0 0 1-.77-.56l.881-5.139a2.122 2.122 0 0 0-.611-1.879L2.16 9.795a.53.53 0 0 1 .294-.906l5.165-.755a2.122 2.122 0 0 0 1.597-1.16z"
                      fill={
                        {
                          "payload": 4282337607,
                          "type": 0,
                        }
                      }
                      propList={
                        [
                          "fill",
                          "strokeWidth",
                          "strokeLinecap",
                          "strokeLinejoin",
                        ]
                      }
                      strokeLinecap={1}
                      strokeLinejoin={1}
                      strokeWidth="2"
                    />
                  </RNSVGGroup>
                </RNSVGSvgView>
                <Text
                  style={
                    [
                      {
                        "fontSize": 29.166666666666668,
                        "fontWeight": "500",
                        "lineHeight": 41.66666666666667,
                      },
                      {
                        "color": "#3f4947",
                      },
                      undefined,
                    ]
                  }
                >
                  1
                </Text>
              </View>
              <Text
                style={
                  [
                    {
                      "fontSize": 29.166666666666668,
                      "fontWeight": "500",
                      "lineHeight": 41.66666666666667,
                    },
                    {
                      "color": "#006a61",
                    },
                    undefined,
                  ]
                }
              >
                $1.00
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
    >
      <RNCSafeAreaView
        edges={
          {
            "bottom": "maximum",
            "left": "off",
            "right": "off",
            "top": "off",
          }
        }
        style={
          {
            "paddingVertical": 20.84375,
          }
        }
      />
    </View>
  </View>
</RCTScrollView>
`;

exports[`ProductList view should match ProductsFetchingNextPage snapshot 1`] = `
<RCTScrollView
  ListEmptyComponent={
    <View
      style={
        {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <Text
        color="#006a61"
        size="H3"
      >
        No products found
      </Text>
    </View>
  }
  ListFooterComponent={
    <ForwardRef
      edges={
        {
          "bottom": "maximum",
        }
      }
      style={
        {
          "paddingVertical": 20.84375,
        }
      }
    >
      <ActivityIndicator
        color="#006a61"
        size="large"
      />
    </ForwardRef>
  }
  ListHeaderComponent={
    <View
      style={
        {
          "gap": 12.506250000000001,
        }
      }
    >
      <Select
        isLoading={false}
        onChange={[Function]}
        options={
          [
            {
              "label": "All categories",
              "value": "",
            },
            {
              "label": "Category 0",
              "value": "category-0",
            },
            {
              "label": "Category 1",
              "value": "category-1",
            },
            {
              "label": "Category 2",
              "value": "category-2",
            },
            {
              "label": "Category 3",
              "value": "category-3",
            },
          ]
        }
        title="Filter by category"
        value=""
      />
      <Select
        onChange={[Function]}
        options={
          [
            {
              "label": "Sort by",
              "value": "",
            },
            {
              "label": "Price: Low to High",
              "value": "price_asc",
            },
            {
              "label": "Price: High to Low",
              "value": "price_desc",
            },
            {
              "label": "Lowest Rating",
              "value": "rating_asc",
            },
            {
              "label": "Highest Rating",
              "value": "rating_desc",
            },
          ]
        }
        title="Sort options"
        value=""
      />
    </View>
  }
  contentContainerStyle={
    {
      "flexGrow": 1,
      "gap": 29.181250000000002,
      "paddingHorizontal": 41.66666666666667,
      "paddingTop": 4.16875,
    }
  }
  data={
    [
      Product {
        "brand": "",
        "category": "category-1",
        "description": "",
        "dimensions": {
          "depth": 0,
          "height": 0,
          "width": 0,
        },
        "id": 1,
        "price": 1,
        "rating": 1,
        "stock": 1,
        "thumbnail": "",
        "title": "Mock product",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={6}
  keyExtractor={[Function]}
  onContentSizeChange={[Function]}
  onEndReached={[MockFunction]}
  onEndReachedThreshold={0.5}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onRefresh={[MockFunction]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  refreshControl={
    <RefreshControlMock
      onRefresh={[MockFunction]}
      refreshing={false}
    />
  }
  refreshing={false}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={0.0001}
  stickyHeaderIndices={[]}
  viewabilityConfigCallbackPairs={[]}
>
  <RCTRefreshControl />
  <View>
    <View
      collapsable={false}
      onLayout={[Function]}
    >
      <View
        style={
          {
            "gap": 12.506250000000001,
          }
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": false,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "alignItems": "center",
              "borderColor": "#bec9c6",
              "borderRadius": 20.833333333333336,
              "borderWidth": 2.0833333333333335,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "padding": 20.833333333333336,
            }
          }
        >
          <Text
            style={
              [
                {
                  "fontSize": 29.166666666666668,
                  "fontWeight": "500",
                  "lineHeight": 41.66666666666667,
                },
                {
                  "color": "#191c1b",
                },
                undefined,
              ]
            }
          >
            All categories
          </Text>
          <RNSVGSvgView
            align="xMidYMid"
            bbHeight={25}
            bbWidth={25}
            focusable={false}
            height={25}
            meetOrSlice={0}
            minX={0}
            minY={0}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                {
                  "flex": 0,
                  "height": 25,
                  "width": 25,
                },
              ]
            }
            vbHeight={10}
            vbWidth={14}
            width={25}
          >
            <RNSVGGroup
              fill={
                {
                  "payload": 4278190080,
                  "type": 0,
                }
              }
            >
              <RNSVGPath
                clipRule={0}
                d="M2.00016 0.833496L7.00016 5.8335L12.0002 0.833496L13.6668 2.50016L7.00016 9.16683L0.333496 2.50016L2.00016 0.833496Z"
                fill={
                  {
                    "payload": 4282337607,
                    "type": 0,
                  }
                }
                fillRule={0}
                propList={
                  [
                    "fill",
                    "fillRule",
                  ]
                }
              />
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "alignItems": "center",
              "borderColor": "#bec9c6",
              "borderRadius": 20.833333333333336,
              "borderWidth": 2.0833333333333335,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "padding": 20.833333333333336,
            }
          }
        >
          <Text
            style={
              [
                {
                  "fontSize": 29.166666666666668,
                  "fontWeight": "500",
                  "lineHeight": 41.66666666666667,
                },
                {
                  "color": "#191c1b",
                },
                undefined,
              ]
            }
          >
            Sort by
          </Text>
          <RNSVGSvgView
            align="xMidYMid"
            bbHeight={25}
            bbWidth={25}
            focusable={false}
            height={25}
            meetOrSlice={0}
            minX={0}
            minY={0}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                {
                  "flex": 0,
                  "height": 25,
                  "width": 25,
                },
              ]
            }
            vbHeight={10}
            vbWidth={14}
            width={25}
          >
            <RNSVGGroup
              fill={
                {
                  "payload": 4278190080,
                  "type": 0,
                }
              }
            >
              <RNSVGPath
                clipRule={0}
                d="M2.00016 0.833496L7.00016 5.8335L12.0002 0.833496L13.6668 2.50016L7.00016 9.16683L0.333496 2.50016L2.00016 0.833496Z"
                fill={
                  {
                    "payload": 4282337607,
                    "type": 0,
                  }
                }
                fillRule={0}
                propList={
                  [
                    "fill",
                    "fillRule",
                  ]
                }
              />
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
      </View>
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          [
            {
              "flexDirection": "row",
            },
            {
              "justifyContent": "space-between",
            },
          ]
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "backgroundColor": "#fff",
              "borderColor": "#bec9c6",
              "borderRadius": 20.833333333333336,
              "borderWidth": 2.0833333333333335,
              "elevation": 1,
              "opacity": 1,
              "shadowColor": "#000",
              "shadowOffset": {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 0.18,
              "shadowRadius": 1,
              "width": "48%",
            }
          }
        >
          <View
            style={
              {
                "borderTopLeftRadius": 20.833333333333336,
                "borderTopRightRadius": 20.833333333333336,
                "height": 260.546875,
                "overflow": "hidden",
                "width": "100%",
              }
            }
          >
            <Image
              source={
                {
                  "uri": "",
                }
              }
              style={
                {
                  "height": "100%",
                  "width": "100%",
                }
              }
            />
            <View
              style={
                [
                  {
                    "backgroundColor": "#006a61",
                    "borderTopLeftRadius": 12.5,
                    "justifyContent": "center",
                    "paddingHorizontal": 16.666666666666668,
                    "paddingVertical": 3.1265625000000004,
                  },
                  {
                    "bottom": 0,
                    "position": "absolute",
                    "right": 0,
                  },
                ]
              }
            >
              <Text
                style={
                  [
                    {
                      "fontSize": 25,
                      "fontWeight": "500",
                      "lineHeight": 33.333333333333336,
                    },
                    {
                      "color": "#fff",
                    },
                    {
                      "textTransform": "capitalize",
                    },
                  ]
                }
              >
                category-1
              </Text>
            </View>
          </View>
          <View
            style={
              {
                "gap": 16.675,
                "paddingHorizontal": 20.833333333333336,
                "paddingVertical": 20.84375,
              }
            }
          >
            <Text
              numberOfLines={2}
              style={
                [
                  {
                    "fontSize": 29.166666666666668,
                    "fontWeight": "500",
                    "lineHeight": 41.66666666666667,
                  },
                  {
                    "color": "#191c1b",
                  },
                  undefined,
                ]
              }
            >
              Mock product
            </Text>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 12.5,
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "gap": 4.166666666666667,
                  }
                }
              >
                <RNSVGSvgView
                  align="xMidYMid"
                  bbHeight={33.333333333333336}
                  bbWidth={33.333333333333336}
                  focusable={false}
                  height={33.333333333333336}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      {
                        "flex": 0,
                        "height": 33,
                        "width": 33,
                      },
                    ]
                  }
                  vbHeight={24}
                  vbWidth={24}
                  width={33.333333333333336}
                >
                  <RNSVGGroup
                    fill={
                      {
                        "payload": 4278190080,
                        "type": 0,
                      }
                    }
                  >
                    <RNSVGPath
                      d="M11.525 2.295a.53.53 0 0 1 .95 0l2.31 4.679a2.123 2.123 0 0 0 1.595 1.16l5.166.756a.53.53 0 0 1 .294.904l-3.736 3.638a2.123 2.123 0 0 0-.611 1.878l.882 5.14a.53.53 0 0 1-.771.56l-4.618-2.428a2.122 2.122 0 0 0-1.973 0L6.396 21.01a.53.53 0 0 1-.77-.56l.881-5.139a2.122 2.122 0 0 0-.611-1.879L2.16 9.795a.53.53 0 0 1 .294-.906l5.165-.755a2.122 2.122 0 0 0 1.597-1.16z"
                      fill={
                        {
                          "payload": 4282337607,
                          "type": 0,
                        }
                      }
                      propList={
                        [
                          "fill",
                          "strokeWidth",
                          "strokeLinecap",
                          "strokeLinejoin",
                        ]
                      }
                      strokeLinecap={1}
                      strokeLinejoin={1}
                      strokeWidth="2"
                    />
                  </RNSVGGroup>
                </RNSVGSvgView>
                <Text
                  style={
                    [
                      {
                        "fontSize": 29.166666666666668,
                        "fontWeight": "500",
                        "lineHeight": 41.66666666666667,
                      },
                      {
                        "color": "#3f4947",
                      },
                      undefined,
                    ]
                  }
                >
                  1
                </Text>
              </View>
              <Text
                style={
                  [
                    {
                      "fontSize": 29.166666666666668,
                      "fontWeight": "500",
                      "lineHeight": 41.66666666666667,
                    },
                    {
                      "color": "#006a61",
                    },
                    undefined,
                  ]
                }
              >
                $1.00
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
    >
      <RNCSafeAreaView
        edges={
          {
            "bottom": "maximum",
            "left": "off",
            "right": "off",
            "top": "off",
          }
        }
        style={
          {
            "paddingVertical": 20.84375,
          }
        }
      >
        <ActivityIndicator
          color="#006a61"
          size="large"
        />
      </RNCSafeAreaView>
    </View>
  </View>
</RCTScrollView>
`;

exports[`ProductList view should match ProductsLoading snapshot 1`] = `
<RCTScrollView
  ListEmptyComponent={
    <View
      style={
        {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <Text
        color="#006a61"
        size="H3"
      >
        No products found
      </Text>
    </View>
  }
  ListFooterComponent={
    <ForwardRef
      edges={
        {
          "bottom": "maximum",
        }
      }
      style={
        {
          "paddingVertical": 20.84375,
        }
      }
    />
  }
  ListHeaderComponent={
    <View
      style={
        {
          "gap": 12.506250000000001,
        }
      }
    >
      <Select
        isLoading={false}
        onChange={[Function]}
        options={
          [
            {
              "label": "All categories",
              "value": "",
            },
            {
              "label": "Category 0",
              "value": "category-0",
            },
            {
              "label": "Category 1",
              "value": "category-1",
            },
            {
              "label": "Category 2",
              "value": "category-2",
            },
            {
              "label": "Category 3",
              "value": "category-3",
            },
          ]
        }
        title="Filter by category"
        value=""
      />
      <Select
        onChange={[Function]}
        options={
          [
            {
              "label": "Sort by",
              "value": "",
            },
            {
              "label": "Price: Low to High",
              "value": "price_asc",
            },
            {
              "label": "Price: High to Low",
              "value": "price_desc",
            },
            {
              "label": "Lowest Rating",
              "value": "rating_asc",
            },
            {
              "label": "Highest Rating",
              "value": "rating_desc",
            },
          ]
        }
        title="Sort options"
        value=""
      />
    </View>
  }
  contentContainerStyle={
    {
      "flexGrow": 1,
      "gap": 29.181250000000002,
      "paddingHorizontal": 41.66666666666667,
      "paddingTop": 4.16875,
    }
  }
  data={
    [
      Product {
        "brand": "",
        "category": "",
        "description": "",
        "dimensions": {
          "depth": 0,
          "height": 0,
          "width": 0,
        },
        "id": 0,
        "price": 0,
        "rating": 0,
        "stock": 0,
        "thumbnail": "",
        "title": "",
      },
      Product {
        "brand": "",
        "category": "",
        "description": "",
        "dimensions": {
          "depth": 0,
          "height": 0,
          "width": 0,
        },
        "id": 1,
        "price": 0,
        "rating": 0,
        "stock": 0,
        "thumbnail": "",
        "title": "",
      },
      Product {
        "brand": "",
        "category": "",
        "description": "",
        "dimensions": {
          "depth": 0,
          "height": 0,
          "width": 0,
        },
        "id": 2,
        "price": 0,
        "rating": 0,
        "stock": 0,
        "thumbnail": "",
        "title": "",
      },
      Product {
        "brand": "",
        "category": "",
        "description": "",
        "dimensions": {
          "depth": 0,
          "height": 0,
          "width": 0,
        },
        "id": 3,
        "price": 0,
        "rating": 0,
        "stock": 0,
        "thumbnail": "",
        "title": "",
      },
      Product {
        "brand": "",
        "category": "",
        "description": "",
        "dimensions": {
          "depth": 0,
          "height": 0,
          "width": 0,
        },
        "id": 4,
        "price": 0,
        "rating": 0,
        "stock": 0,
        "thumbnail": "",
        "title": "",
      },
      Product {
        "brand": "",
        "category": "",
        "description": "",
        "dimensions": {
          "depth": 0,
          "height": 0,
          "width": 0,
        },
        "id": 5,
        "price": 0,
        "rating": 0,
        "stock": 0,
        "thumbnail": "",
        "title": "",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={6}
  keyExtractor={[Function]}
  onContentSizeChange={[Function]}
  onEndReached={[MockFunction]}
  onEndReachedThreshold={0.5}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  refreshing={false}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={0.0001}
  stickyHeaderIndices={[]}
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      collapsable={false}
      onLayout={[Function]}
    >
      <View
        style={
          {
            "gap": 12.506250000000001,
          }
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": false,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "alignItems": "center",
              "borderColor": "#bec9c6",
              "borderRadius": 20.833333333333336,
              "borderWidth": 2.0833333333333335,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "padding": 20.833333333333336,
            }
          }
        >
          <Text
            style={
              [
                {
                  "fontSize": 29.166666666666668,
                  "fontWeight": "500",
                  "lineHeight": 41.66666666666667,
                },
                {
                  "color": "#191c1b",
                },
                undefined,
              ]
            }
          >
            All categories
          </Text>
          <RNSVGSvgView
            align="xMidYMid"
            bbHeight={25}
            bbWidth={25}
            focusable={false}
            height={25}
            meetOrSlice={0}
            minX={0}
            minY={0}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                {
                  "flex": 0,
                  "height": 25,
                  "width": 25,
                },
              ]
            }
            vbHeight={10}
            vbWidth={14}
            width={25}
          >
            <RNSVGGroup
              fill={
                {
                  "payload": 4278190080,
                  "type": 0,
                }
              }
            >
              <RNSVGPath
                clipRule={0}
                d="M2.00016 0.833496L7.00016 5.8335L12.0002 0.833496L13.6668 2.50016L7.00016 9.16683L0.333496 2.50016L2.00016 0.833496Z"
                fill={
                  {
                    "payload": 4282337607,
                    "type": 0,
                  }
                }
                fillRule={0}
                propList={
                  [
                    "fill",
                    "fillRule",
                  ]
                }
              />
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "alignItems": "center",
              "borderColor": "#bec9c6",
              "borderRadius": 20.833333333333336,
              "borderWidth": 2.0833333333333335,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "padding": 20.833333333333336,
            }
          }
        >
          <Text
            style={
              [
                {
                  "fontSize": 29.166666666666668,
                  "fontWeight": "500",
                  "lineHeight": 41.66666666666667,
                },
                {
                  "color": "#191c1b",
                },
                undefined,
              ]
            }
          >
            Sort by
          </Text>
          <RNSVGSvgView
            align="xMidYMid"
            bbHeight={25}
            bbWidth={25}
            focusable={false}
            height={25}
            meetOrSlice={0}
            minX={0}
            minY={0}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                {
                  "flex": 0,
                  "height": 25,
                  "width": 25,
                },
              ]
            }
            vbHeight={10}
            vbWidth={14}
            width={25}
          >
            <RNSVGGroup
              fill={
                {
                  "payload": 4278190080,
                  "type": 0,
                }
              }
            >
              <RNSVGPath
                clipRule={0}
                d="M2.00016 0.833496L7.00016 5.8335L12.0002 0.833496L13.6668 2.50016L7.00016 9.16683L0.333496 2.50016L2.00016 0.833496Z"
                fill={
                  {
                    "payload": 4282337607,
                    "type": 0,
                  }
                }
                fillRule={0}
                propList={
                  [
                    "fill",
                    "fillRule",
                  ]
                }
              />
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
      </View>
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          [
            {
              "flexDirection": "row",
            },
            {
              "justifyContent": "space-between",
            },
          ]
        }
      >
        <View
          collapsable={false}
          style={
            {
              "backgroundColor": "#e9e9e9",
              "borderColor": "#bec9c6",
              "borderRadius": 20.833333333333336,
              "borderWidth": 0,
              "elevation": 0,
              "height": 416.875,
              "opacity": 1,
              "shadowColor": "#000",
              "shadowOffset": {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 0,
              "shadowRadius": 1,
              "width": "48%",
            }
          }
        />
        <View
          collapsable={false}
          style={
            {
              "backgroundColor": "#e9e9e9",
              "borderColor": "#bec9c6",
              "borderRadius": 20.833333333333336,
              "borderWidth": 0,
              "elevation": 0,
              "height": 416.875,
              "opacity": 1,
              "shadowColor": "#000",
              "shadowOffset": {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 0,
              "shadowRadius": 1,
              "width": "48%",
            }
          }
        />
      </View>
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          [
            {
              "flexDirection": "row",
            },
            {
              "justifyContent": "space-between",
            },
          ]
        }
      >
        <View
          collapsable={false}
          style={
            {
              "backgroundColor": "#e9e9e9",
              "borderColor": "#bec9c6",
              "borderRadius": 20.833333333333336,
              "borderWidth": 0,
              "elevation": 0,
              "height": 416.875,
              "opacity": 1,
              "shadowColor": "#000",
              "shadowOffset": {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 0,
              "shadowRadius": 1,
              "width": "48%",
            }
          }
        />
        <View
          collapsable={false}
          style={
            {
              "backgroundColor": "#e9e9e9",
              "borderColor": "#bec9c6",
              "borderRadius": 20.833333333333336,
              "borderWidth": 0,
              "elevation": 0,
              "height": 416.875,
              "opacity": 1,
              "shadowColor": "#000",
              "shadowOffset": {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 0,
              "shadowRadius": 1,
              "width": "48%",
            }
          }
        />
      </View>
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          [
            {
              "flexDirection": "row",
            },
            {
              "justifyContent": "space-between",
            },
          ]
        }
      >
        <View
          collapsable={false}
          style={
            {
              "backgroundColor": "#e9e9e9",
              "borderColor": "#bec9c6",
              "borderRadius": 20.833333333333336,
              "borderWidth": 0,
              "elevation": 0,
              "height": 416.875,
              "opacity": 1,
              "shadowColor": "#000",
              "shadowOffset": {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 0,
              "shadowRadius": 1,
              "width": "48%",
            }
          }
        />
        <View
          collapsable={false}
          style={
            {
              "backgroundColor": "#e9e9e9",
              "borderColor": "#bec9c6",
              "borderRadius": 20.833333333333336,
              "borderWidth": 0,
              "elevation": 0,
              "height": 416.875,
              "opacity": 1,
              "shadowColor": "#000",
              "shadowOffset": {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 0,
              "shadowRadius": 1,
              "width": "48%",
            }
          }
        />
      </View>
    </View>
    <View
      onLayout={[Function]}
    >
      <RNCSafeAreaView
        edges={
          {
            "bottom": "maximum",
            "left": "off",
            "right": "off",
            "top": "off",
          }
        }
        style={
          {
            "paddingVertical": 20.84375,
          }
        }
      />
    </View>
  </View>
</RCTScrollView>
`;

exports[`ProductList view should match ProductsRefreshing snapshot 1`] = `
<RCTScrollView
  ListEmptyComponent={
    <View
      style={
        {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <Text
        color="#006a61"
        size="H3"
      >
        No products found
      </Text>
    </View>
  }
  ListFooterComponent={
    <ForwardRef
      edges={
        {
          "bottom": "maximum",
        }
      }
      style={
        {
          "paddingVertical": 20.84375,
        }
      }
    />
  }
  ListHeaderComponent={
    <View
      style={
        {
          "gap": 12.506250000000001,
        }
      }
    >
      <Select
        isLoading={false}
        onChange={[Function]}
        options={
          [
            {
              "label": "All categories",
              "value": "",
            },
            {
              "label": "Category 0",
              "value": "category-0",
            },
            {
              "label": "Category 1",
              "value": "category-1",
            },
            {
              "label": "Category 2",
              "value": "category-2",
            },
            {
              "label": "Category 3",
              "value": "category-3",
            },
          ]
        }
        title="Filter by category"
        value=""
      />
      <Select
        onChange={[Function]}
        options={
          [
            {
              "label": "Sort by",
              "value": "",
            },
            {
              "label": "Price: Low to High",
              "value": "price_asc",
            },
            {
              "label": "Price: High to Low",
              "value": "price_desc",
            },
            {
              "label": "Lowest Rating",
              "value": "rating_asc",
            },
            {
              "label": "Highest Rating",
              "value": "rating_desc",
            },
          ]
        }
        title="Sort options"
        value=""
      />
    </View>
  }
  contentContainerStyle={
    {
      "flexGrow": 1,
      "gap": 29.181250000000002,
      "paddingHorizontal": 41.66666666666667,
      "paddingTop": 4.16875,
    }
  }
  data={
    [
      Product {
        "brand": "",
        "category": "category-1",
        "description": "",
        "dimensions": {
          "depth": 0,
          "height": 0,
          "width": 0,
        },
        "id": 1,
        "price": 1,
        "rating": 1,
        "stock": 1,
        "thumbnail": "",
        "title": "Mock product",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={6}
  keyExtractor={[Function]}
  onContentSizeChange={[Function]}
  onEndReached={[MockFunction]}
  onEndReachedThreshold={0.5}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onRefresh={[MockFunction]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  refreshControl={
    <RefreshControlMock
      onRefresh={[MockFunction]}
      refreshing={true}
    />
  }
  refreshing={true}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={0.0001}
  stickyHeaderIndices={[]}
  viewabilityConfigCallbackPairs={[]}
>
  <RCTRefreshControl />
  <View>
    <View
      collapsable={false}
      onLayout={[Function]}
    >
      <View
        style={
          {
            "gap": 12.506250000000001,
          }
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": false,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "alignItems": "center",
              "borderColor": "#bec9c6",
              "borderRadius": 20.833333333333336,
              "borderWidth": 2.0833333333333335,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "padding": 20.833333333333336,
            }
          }
        >
          <Text
            style={
              [
                {
                  "fontSize": 29.166666666666668,
                  "fontWeight": "500",
                  "lineHeight": 41.66666666666667,
                },
                {
                  "color": "#191c1b",
                },
                undefined,
              ]
            }
          >
            All categories
          </Text>
          <RNSVGSvgView
            align="xMidYMid"
            bbHeight={25}
            bbWidth={25}
            focusable={false}
            height={25}
            meetOrSlice={0}
            minX={0}
            minY={0}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                {
                  "flex": 0,
                  "height": 25,
                  "width": 25,
                },
              ]
            }
            vbHeight={10}
            vbWidth={14}
            width={25}
          >
            <RNSVGGroup
              fill={
                {
                  "payload": 4278190080,
                  "type": 0,
                }
              }
            >
              <RNSVGPath
                clipRule={0}
                d="M2.00016 0.833496L7.00016 5.8335L12.0002 0.833496L13.6668 2.50016L7.00016 9.16683L0.333496 2.50016L2.00016 0.833496Z"
                fill={
                  {
                    "payload": 4282337607,
                    "type": 0,
                  }
                }
                fillRule={0}
                propList={
                  [
                    "fill",
                    "fillRule",
                  ]
                }
              />
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "alignItems": "center",
              "borderColor": "#bec9c6",
              "borderRadius": 20.833333333333336,
              "borderWidth": 2.0833333333333335,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "padding": 20.833333333333336,
            }
          }
        >
          <Text
            style={
              [
                {
                  "fontSize": 29.166666666666668,
                  "fontWeight": "500",
                  "lineHeight": 41.66666666666667,
                },
                {
                  "color": "#191c1b",
                },
                undefined,
              ]
            }
          >
            Sort by
          </Text>
          <RNSVGSvgView
            align="xMidYMid"
            bbHeight={25}
            bbWidth={25}
            focusable={false}
            height={25}
            meetOrSlice={0}
            minX={0}
            minY={0}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                {
                  "flex": 0,
                  "height": 25,
                  "width": 25,
                },
              ]
            }
            vbHeight={10}
            vbWidth={14}
            width={25}
          >
            <RNSVGGroup
              fill={
                {
                  "payload": 4278190080,
                  "type": 0,
                }
              }
            >
              <RNSVGPath
                clipRule={0}
                d="M2.00016 0.833496L7.00016 5.8335L12.0002 0.833496L13.6668 2.50016L7.00016 9.16683L0.333496 2.50016L2.00016 0.833496Z"
                fill={
                  {
                    "payload": 4282337607,
                    "type": 0,
                  }
                }
                fillRule={0}
                propList={
                  [
                    "fill",
                    "fillRule",
                  ]
                }
              />
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
      </View>
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          [
            {
              "flexDirection": "row",
            },
            {
              "justifyContent": "space-between",
            },
          ]
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "backgroundColor": "#fff",
              "borderColor": "#bec9c6",
              "borderRadius": 20.833333333333336,
              "borderWidth": 2.0833333333333335,
              "elevation": 1,
              "opacity": 1,
              "shadowColor": "#000",
              "shadowOffset": {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 0.18,
              "shadowRadius": 1,
              "width": "48%",
            }
          }
        >
          <View
            style={
              {
                "borderTopLeftRadius": 20.833333333333336,
                "borderTopRightRadius": 20.833333333333336,
                "height": 260.546875,
                "overflow": "hidden",
                "width": "100%",
              }
            }
          >
            <Image
              source={
                {
                  "uri": "",
                }
              }
              style={
                {
                  "height": "100%",
                  "width": "100%",
                }
              }
            />
            <View
              style={
                [
                  {
                    "backgroundColor": "#006a61",
                    "borderTopLeftRadius": 12.5,
                    "justifyContent": "center",
                    "paddingHorizontal": 16.666666666666668,
                    "paddingVertical": 3.1265625000000004,
                  },
                  {
                    "bottom": 0,
                    "position": "absolute",
                    "right": 0,
                  },
                ]
              }
            >
              <Text
                style={
                  [
                    {
                      "fontSize": 25,
                      "fontWeight": "500",
                      "lineHeight": 33.333333333333336,
                    },
                    {
                      "color": "#fff",
                    },
                    {
                      "textTransform": "capitalize",
                    },
                  ]
                }
              >
                category-1
              </Text>
            </View>
          </View>
          <View
            style={
              {
                "gap": 16.675,
                "paddingHorizontal": 20.833333333333336,
                "paddingVertical": 20.84375,
              }
            }
          >
            <Text
              numberOfLines={2}
              style={
                [
                  {
                    "fontSize": 29.166666666666668,
                    "fontWeight": "500",
                    "lineHeight": 41.66666666666667,
                  },
                  {
                    "color": "#191c1b",
                  },
                  undefined,
                ]
              }
            >
              Mock product
            </Text>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 12.5,
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "gap": 4.166666666666667,
                  }
                }
              >
                <RNSVGSvgView
                  align="xMidYMid"
                  bbHeight={33.333333333333336}
                  bbWidth={33.333333333333336}
                  focusable={false}
                  height={33.333333333333336}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      {
                        "flex": 0,
                        "height": 33,
                        "width": 33,
                      },
                    ]
                  }
                  vbHeight={24}
                  vbWidth={24}
                  width={33.333333333333336}
                >
                  <RNSVGGroup
                    fill={
                      {
                        "payload": 4278190080,
                        "type": 0,
                      }
                    }
                  >
                    <RNSVGPath
                      d="M11.525 2.295a.53.53 0 0 1 .95 0l2.31 4.679a2.123 2.123 0 0 0 1.595 1.16l5.166.756a.53.53 0 0 1 .294.904l-3.736 3.638a2.123 2.123 0 0 0-.611 1.878l.882 5.14a.53.53 0 0 1-.771.56l-4.618-2.428a2.122 2.122 0 0 0-1.973 0L6.396 21.01a.53.53 0 0 1-.77-.56l.881-5.139a2.122 2.122 0 0 0-.611-1.879L2.16 9.795a.53.53 0 0 1 .294-.906l5.165-.755a2.122 2.122 0 0 0 1.597-1.16z"
                      fill={
                        {
                          "payload": 4282337607,
                          "type": 0,
                        }
                      }
                      propList={
                        [
                          "fill",
                          "strokeWidth",
                          "strokeLinecap",
                          "strokeLinejoin",
                        ]
                      }
                      strokeLinecap={1}
                      strokeLinejoin={1}
                      strokeWidth="2"
                    />
                  </RNSVGGroup>
                </RNSVGSvgView>
                <Text
                  style={
                    [
                      {
                        "fontSize": 29.166666666666668,
                        "fontWeight": "500",
                        "lineHeight": 41.66666666666667,
                      },
                      {
                        "color": "#3f4947",
                      },
                      undefined,
                    ]
                  }
                >
                  1
                </Text>
              </View>
              <Text
                style={
                  [
                    {
                      "fontSize": 29.166666666666668,
                      "fontWeight": "500",
                      "lineHeight": 41.66666666666667,
                    },
                    {
                      "color": "#006a61",
                    },
                    undefined,
                  ]
                }
              >
                $1.00
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
    >
      <RNCSafeAreaView
        edges={
          {
            "bottom": "maximum",
            "left": "off",
            "right": "off",
            "top": "off",
          }
        }
        style={
          {
            "paddingVertical": 20.84375,
          }
        }
      />
    </View>
  </View>
</RCTScrollView>
`;
